Traceback (most recent call last):
  File "/home/frmuno/anaconda3/envs/jupyterbook/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/frmuno/anaconda3/envs/jupyterbook/lib/python3.8/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/frmuno/anaconda3/envs/jupyterbook/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/frmuno/anaconda3/envs/jupyterbook/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/home/frmuno/anaconda3/envs/jupyterbook/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/frmuno/anaconda3/envs/jupyterbook/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/home/frmuno/anaconda3/envs/jupyterbook/lib/python3.8/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/frmuno/anaconda3/envs/jupyterbook/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import re
import collections

root = l14_act_tree

counter=0

## We will build a dataframe from a list of dicts
## Inspired by the approach of Chris Moffitt here https://pbpython.com/pandas-list-dict.html
act_list = []

def get_toplevel_desc (vid, tree):
    """
    Gets the top-level title from a voting id
    """
    for c in tree.find(".//pt_gov_ar_objectos_VotacaoOut/[id='"+ vid +"']/../.."):
        if c.tag == "assunto":
            return c.text

for voting in l14_act_tree.findall(".//pt_gov_ar_objectos_actividades_DetalhePesquisaActividadesOut"):
    act_dict = collections.OrderedDict()
    counter +=1
    votep = voting.find('./tipo')
    if votep is not None: q
        act_dict['id'] = voting.find('id').text
        ## Add the "A" for Type to mark this as coming from "Iniciativas"
        act_dict['Tipo'] = "A"
        for c in voting:
            if c.tag == "id":
                act_dict['descricao'] = get_toplevel_desc(c.text, l14_act_tree)
            if c.tag == "detalhe":
                for party, vote in parse_voting(c.text).items():
                    act_dict[party] = vote 
            elif c.tag == "ausencias":
                    act_dict[c.tag] = c.find("string").text
            else:
                    act_dict[c.tag] = c.text
        act_list.append(act_dict)
    ## Provide progression feedback
    print('.', end='')

print(counter)
------------------

[0;36m  File [0;32m"/tmp/ipykernel_135786/350924530.py"[0;36m, line [0;32m25[0m
[0;31m    act_dict['id'] = voting.find('id').text[0m
[0m    ^[0m
[0;31mIndentationError[0m[0;31m:[0m unexpected indent

IndentationError: unexpected indent (350924530.py, line 25)

